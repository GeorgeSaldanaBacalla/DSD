
package pe.com.soappet.service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClienteWS", targetNamespace = "http://service.soappet.com.pe/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClienteWS {


    /**
     * 
     * @return
     *     returns java.util.List<pe.com.soappet.service.Cliente>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarClientes", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.ListarClientes")
    @ResponseWrapper(localName = "listarClientesResponse", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.ListarClientesResponse")
    @Action(input = "http://service.soappet.com.pe/ClienteWS/listarClientesRequest", output = "http://service.soappet.com.pe/ClienteWS/listarClientesResponse")
    public List<Cliente> listarClientes();

    /**
     * 
     * @param dni
     */
    @WebMethod
    @RequestWrapper(localName = "eliminarCliente", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.EliminarCliente")
    @ResponseWrapper(localName = "eliminarClienteResponse", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.EliminarClienteResponse")
    @Action(input = "http://service.soappet.com.pe/ClienteWS/eliminarClienteRequest", output = "http://service.soappet.com.pe/ClienteWS/eliminarClienteResponse")
    public void eliminarCliente(
        @WebParam(name = "dni", targetNamespace = "")
        String dni);

    /**
     * 
     * @param dni
     * @return
     *     returns pe.com.soappet.service.Cliente
     * @throws MyException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerCliente", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.ObtenerCliente")
    @ResponseWrapper(localName = "obtenerClienteResponse", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.ObtenerClienteResponse")
    @Action(input = "http://service.soappet.com.pe/ClienteWS/obtenerClienteRequest", output = "http://service.soappet.com.pe/ClienteWS/obtenerClienteResponse", fault = {
        @FaultAction(className = MyException.class, value = "http://service.soappet.com.pe/ClienteWS/obtenerCliente/Fault/MyException")
    })
    public Cliente obtenerCliente(
        @WebParam(name = "dni", targetNamespace = "")
        String dni)
        throws MyException
    ;

    /**
     * 
     * @param cliente
     * @return
     *     returns pe.com.soappet.service.Cliente
     * @throws MyException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "guardarCliente", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.GuardarCliente")
    @ResponseWrapper(localName = "guardarClienteResponse", targetNamespace = "http://service.soappet.com.pe/", className = "pe.com.soappet.service.GuardarClienteResponse")
    @Action(input = "http://service.soappet.com.pe/ClienteWS/guardarClienteRequest", output = "http://service.soappet.com.pe/ClienteWS/guardarClienteResponse", fault = {
        @FaultAction(className = MyException.class, value = "http://service.soappet.com.pe/ClienteWS/guardarCliente/Fault/MyException")
    })
    public Cliente guardarCliente(
        @WebParam(name = "cliente", targetNamespace = "")
        Cliente cliente)
        throws MyException
    ;

}
